// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: x/cron/codec.proto

package cron;

public final class Codec {
  private Codec() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TaskResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cron.TaskResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Successful is set to true if the task was successfully executed.
     * </pre>
     *
     * <code>bool successful = 2;</code>
     */
    boolean getSuccessful();

    /**
     * <pre>
     * Info contains any additinal information that might be useful to lean more
     * about the task execution.
     * </pre>
     *
     * <code>string info = 3;</code>
     */
    java.lang.String getInfo();
    /**
     * <pre>
     * Info contains any additinal information that might be useful to lean more
     * about the task execution.
     * </pre>
     *
     * <code>string info = 3;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    /**
     * <pre>
     * Exec time hold the information of when the task was executed.
     * </pre>
     *
     * <code>int64 exec_time = 4;</code>
     */
    long getExecTime();

    /**
     * <pre>
     * Exec height holds the block height value at the time the task was executed.
     * </pre>
     *
     * <code>int64 exec_height = 5;</code>
     */
    long getExecHeight();
  }
  /**
   * <pre>
   * TaskResult is a publicly available information about task execution result.
   * It is only created for those tasks that were executed.
   * Due to a bug in tendermint we must store this information ourselves instead
   * of relying on the usual search via tag.
   * https://github.com/tendermint/tendermint/issues/3665
   * </pre>
   *
   * Protobuf type {@code cron.TaskResult}
   */
  public  static final class TaskResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cron.TaskResult)
      TaskResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TaskResult.newBuilder() to construct.
    private TaskResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TaskResult() {
      info_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TaskResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 16: {

              successful_ = input.readBool();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              info_ = s;
              break;
            }
            case 32: {

              execTime_ = input.readInt64();
              break;
            }
            case 40: {

              execHeight_ = input.readInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return cron.Codec.internal_static_cron_TaskResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return cron.Codec.internal_static_cron_TaskResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              cron.Codec.TaskResult.class, cron.Codec.TaskResult.Builder.class);
    }

    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int SUCCESSFUL_FIELD_NUMBER = 2;
    private boolean successful_;
    /**
     * <pre>
     * Successful is set to true if the task was successfully executed.
     * </pre>
     *
     * <code>bool successful = 2;</code>
     */
    public boolean getSuccessful() {
      return successful_;
    }

    public static final int INFO_FIELD_NUMBER = 3;
    private volatile java.lang.Object info_;
    /**
     * <pre>
     * Info contains any additinal information that might be useful to lean more
     * about the task execution.
     * </pre>
     *
     * <code>string info = 3;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        info_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Info contains any additinal information that might be useful to lean more
     * about the task execution.
     * </pre>
     *
     * <code>string info = 3;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXEC_TIME_FIELD_NUMBER = 4;
    private long execTime_;
    /**
     * <pre>
     * Exec time hold the information of when the task was executed.
     * </pre>
     *
     * <code>int64 exec_time = 4;</code>
     */
    public long getExecTime() {
      return execTime_;
    }

    public static final int EXEC_HEIGHT_FIELD_NUMBER = 5;
    private long execHeight_;
    /**
     * <pre>
     * Exec height holds the block height value at the time the task was executed.
     * </pre>
     *
     * <code>int64 exec_height = 5;</code>
     */
    public long getExecHeight() {
      return execHeight_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (successful_ != false) {
        output.writeBool(2, successful_);
      }
      if (!getInfoBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, info_);
      }
      if (execTime_ != 0L) {
        output.writeInt64(4, execTime_);
      }
      if (execHeight_ != 0L) {
        output.writeInt64(5, execHeight_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (successful_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(2, successful_);
      }
      if (!getInfoBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, info_);
      }
      if (execTime_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(4, execTime_);
      }
      if (execHeight_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(5, execHeight_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof cron.Codec.TaskResult)) {
        return super.equals(obj);
      }
      cron.Codec.TaskResult other = (cron.Codec.TaskResult) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (getSuccessful()
          != other.getSuccessful()) return false;
      if (!getInfo()
          .equals(other.getInfo())) return false;
      if (getExecTime()
          != other.getExecTime()) return false;
      if (getExecHeight()
          != other.getExecHeight()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (37 * hash) + SUCCESSFUL_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSuccessful());
      hash = (37 * hash) + INFO_FIELD_NUMBER;
      hash = (53 * hash) + getInfo().hashCode();
      hash = (37 * hash) + EXEC_TIME_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecTime());
      hash = (37 * hash) + EXEC_HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getExecHeight());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static cron.Codec.TaskResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cron.Codec.TaskResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cron.Codec.TaskResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cron.Codec.TaskResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cron.Codec.TaskResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static cron.Codec.TaskResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static cron.Codec.TaskResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cron.Codec.TaskResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static cron.Codec.TaskResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static cron.Codec.TaskResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static cron.Codec.TaskResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static cron.Codec.TaskResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(cron.Codec.TaskResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TaskResult is a publicly available information about task execution result.
     * It is only created for those tasks that were executed.
     * Due to a bug in tendermint we must store this information ourselves instead
     * of relying on the usual search via tag.
     * https://github.com/tendermint/tendermint/issues/3665
     * </pre>
     *
     * Protobuf type {@code cron.TaskResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cron.TaskResult)
        cron.Codec.TaskResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return cron.Codec.internal_static_cron_TaskResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return cron.Codec.internal_static_cron_TaskResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                cron.Codec.TaskResult.class, cron.Codec.TaskResult.Builder.class);
      }

      // Construct using cron.Codec.TaskResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        successful_ = false;

        info_ = "";

        execTime_ = 0L;

        execHeight_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return cron.Codec.internal_static_cron_TaskResult_descriptor;
      }

      @java.lang.Override
      public cron.Codec.TaskResult getDefaultInstanceForType() {
        return cron.Codec.TaskResult.getDefaultInstance();
      }

      @java.lang.Override
      public cron.Codec.TaskResult build() {
        cron.Codec.TaskResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public cron.Codec.TaskResult buildPartial() {
        cron.Codec.TaskResult result = new cron.Codec.TaskResult(this);
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.successful_ = successful_;
        result.info_ = info_;
        result.execTime_ = execTime_;
        result.execHeight_ = execHeight_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof cron.Codec.TaskResult) {
          return mergeFrom((cron.Codec.TaskResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(cron.Codec.TaskResult other) {
        if (other == cron.Codec.TaskResult.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.getSuccessful() != false) {
          setSuccessful(other.getSuccessful());
        }
        if (!other.getInfo().isEmpty()) {
          info_ = other.info_;
          onChanged();
        }
        if (other.getExecTime() != 0L) {
          setExecTime(other.getExecTime());
        }
        if (other.getExecHeight() != 0L) {
          setExecHeight(other.getExecHeight());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        cron.Codec.TaskResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (cron.Codec.TaskResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private boolean successful_ ;
      /**
       * <pre>
       * Successful is set to true if the task was successfully executed.
       * </pre>
       *
       * <code>bool successful = 2;</code>
       */
      public boolean getSuccessful() {
        return successful_;
      }
      /**
       * <pre>
       * Successful is set to true if the task was successfully executed.
       * </pre>
       *
       * <code>bool successful = 2;</code>
       */
      public Builder setSuccessful(boolean value) {
        
        successful_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Successful is set to true if the task was successfully executed.
       * </pre>
       *
       * <code>bool successful = 2;</code>
       */
      public Builder clearSuccessful() {
        
        successful_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <pre>
       * Info contains any additinal information that might be useful to lean more
       * about the task execution.
       * </pre>
       *
       * <code>string info = 3;</code>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          info_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Info contains any additinal information that might be useful to lean more
       * about the task execution.
       * </pre>
       *
       * <code>string info = 3;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Info contains any additinal information that might be useful to lean more
       * about the task execution.
       * </pre>
       *
       * <code>string info = 3;</code>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info contains any additinal information that might be useful to lean more
       * about the task execution.
       * </pre>
       *
       * <code>string info = 3;</code>
       */
      public Builder clearInfo() {
        
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Info contains any additinal information that might be useful to lean more
       * about the task execution.
       * </pre>
       *
       * <code>string info = 3;</code>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        info_ = value;
        onChanged();
        return this;
      }

      private long execTime_ ;
      /**
       * <pre>
       * Exec time hold the information of when the task was executed.
       * </pre>
       *
       * <code>int64 exec_time = 4;</code>
       */
      public long getExecTime() {
        return execTime_;
      }
      /**
       * <pre>
       * Exec time hold the information of when the task was executed.
       * </pre>
       *
       * <code>int64 exec_time = 4;</code>
       */
      public Builder setExecTime(long value) {
        
        execTime_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exec time hold the information of when the task was executed.
       * </pre>
       *
       * <code>int64 exec_time = 4;</code>
       */
      public Builder clearExecTime() {
        
        execTime_ = 0L;
        onChanged();
        return this;
      }

      private long execHeight_ ;
      /**
       * <pre>
       * Exec height holds the block height value at the time the task was executed.
       * </pre>
       *
       * <code>int64 exec_height = 5;</code>
       */
      public long getExecHeight() {
        return execHeight_;
      }
      /**
       * <pre>
       * Exec height holds the block height value at the time the task was executed.
       * </pre>
       *
       * <code>int64 exec_height = 5;</code>
       */
      public Builder setExecHeight(long value) {
        
        execHeight_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Exec height holds the block height value at the time the task was executed.
       * </pre>
       *
       * <code>int64 exec_height = 5;</code>
       */
      public Builder clearExecHeight() {
        
        execHeight_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cron.TaskResult)
    }

    // @@protoc_insertion_point(class_scope:cron.TaskResult)
    private static final cron.Codec.TaskResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new cron.Codec.TaskResult();
    }

    public static cron.Codec.TaskResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TaskResult>
        PARSER = new com.google.protobuf.AbstractParser<TaskResult>() {
      @java.lang.Override
      public TaskResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TaskResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TaskResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TaskResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public cron.Codec.TaskResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cron_TaskResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cron_TaskResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022x/cron/codec.proto\022\004cron\032\013codec.proto\"" +
      "y\n\nTaskResult\022!\n\010metadata\030\001 \001(\0132\017.weave." +
      "Metadata\022\022\n\nsuccessful\030\002 \001(\010\022\014\n\004info\030\003 \001" +
      "(\t\022\021\n\texec_time\030\004 \001(\003\022\023\n\013exec_height\030\005 \001" +
      "(\003b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          weave.Codec.getDescriptor(),
        }, assigner);
    internal_static_cron_TaskResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cron_TaskResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cron_TaskResult_descriptor,
        new java.lang.String[] { "Metadata", "Successful", "Info", "ExecTime", "ExecHeight", });
    weave.Codec.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
