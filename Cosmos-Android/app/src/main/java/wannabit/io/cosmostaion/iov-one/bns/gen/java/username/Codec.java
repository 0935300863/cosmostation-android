// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cmd/bnsd/x/username/codec.proto

package username;

public final class Codec {
  private Codec() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.Token)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    java.util.List<username.Codec.BlockchainAddress> 
        getTargetsList();
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    username.Codec.BlockchainAddress getTargets(int index);
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    int getTargetsCount();
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
        getTargetsOrBuilderList();
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    username.Codec.BlockchainAddressOrBuilder getTargetsOrBuilder(
        int index);

    /**
     * <pre>
     * Owner is a weave.Address that controls this token. Only the owner can
     * modify a username token.
     * </pre>
     *
     * <code>bytes owner = 3;</code>
     */
    com.google.protobuf.ByteString getOwner();
  }
  /**
   * <pre>
   * Token model represents a username mapping to an address together with all
   * metadata.
   * Each Token model is stored using the username as the key. This guarantee
   * that the name is unique. Username is a combination of a name and a domain.
   * The format is &lt;name&gt;*&lt;domain&gt;
   * Each token points to a blockchain and an address on that blockchain. Both
   * blockchain ID and address are an arbitrary string as we do not want to limit
   * ourselves to certain patterns.
   * </pre>
   *
   * Protobuf type {@code username.Token}
   */
  public  static final class Token extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.Token)
      TokenOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Token.newBuilder() to construct.
    private Token(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Token() {
      targets_ = java.util.Collections.emptyList();
      owner_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Token(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                targets_ = new java.util.ArrayList<username.Codec.BlockchainAddress>();
                mutable_bitField0_ |= 0x00000002;
              }
              targets_.add(
                  input.readMessage(username.Codec.BlockchainAddress.parser(), extensionRegistry));
              break;
            }
            case 26: {

              owner_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          targets_ = java.util.Collections.unmodifiableList(targets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_Token_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_Token_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.Token.class, username.Codec.Token.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int TARGETS_FIELD_NUMBER = 2;
    private java.util.List<username.Codec.BlockchainAddress> targets_;
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    public java.util.List<username.Codec.BlockchainAddress> getTargetsList() {
      return targets_;
    }
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    public java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    public username.Codec.BlockchainAddress getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <pre>
     * Targets specifies where this username token points to. This must be at
     * least one blockchain address elemenet.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 2;</code>
     */
    public username.Codec.BlockchainAddressOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }

    public static final int OWNER_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString owner_;
    /**
     * <pre>
     * Owner is a weave.Address that controls this token. Only the owner can
     * modify a username token.
     * </pre>
     *
     * <code>bytes owner = 3;</code>
     */
    public com.google.protobuf.ByteString getOwner() {
      return owner_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      for (int i = 0; i < targets_.size(); i++) {
        output.writeMessage(2, targets_.get(i));
      }
      if (!owner_.isEmpty()) {
        output.writeBytes(3, owner_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      for (int i = 0; i < targets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, targets_.get(i));
      }
      if (!owner_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, owner_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.Token)) {
        return super.equals(obj);
      }
      username.Codec.Token other = (username.Codec.Token) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getTargetsList()
          .equals(other.getTargetsList())) return false;
      if (!getOwner()
          .equals(other.getOwner())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      hash = (37 * hash) + OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getOwner().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.Token parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.Token parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.Token parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.Token parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.Token parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.Token parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.Token parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.Token parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.Token parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.Token parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.Token parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.Token parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.Token prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Token model represents a username mapping to an address together with all
     * metadata.
     * Each Token model is stored using the username as the key. This guarantee
     * that the name is unique. Username is a combination of a name and a domain.
     * The format is &lt;name&gt;*&lt;domain&gt;
     * Each token points to a blockchain and an address on that blockchain. Both
     * blockchain ID and address are an arbitrary string as we do not want to limit
     * ourselves to certain patterns.
     * </pre>
     *
     * Protobuf type {@code username.Token}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.Token)
        username.Codec.TokenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_Token_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_Token_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.Token.class, username.Codec.Token.Builder.class);
      }

      // Construct using username.Codec.Token.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          targetsBuilder_.clear();
        }
        owner_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_Token_descriptor;
      }

      @java.lang.Override
      public username.Codec.Token getDefaultInstanceForType() {
        return username.Codec.Token.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.Token build() {
        username.Codec.Token result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.Token buildPartial() {
        username.Codec.Token result = new username.Codec.Token(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            targets_ = java.util.Collections.unmodifiableList(targets_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
        result.owner_ = owner_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.Token) {
          return mergeFrom((username.Codec.Token)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.Token other) {
        if (other == username.Codec.Token.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (targetsBuilder_ == null) {
          if (!other.targets_.isEmpty()) {
            if (targets_.isEmpty()) {
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureTargetsIsMutable();
              targets_.addAll(other.targets_);
            }
            onChanged();
          }
        } else {
          if (!other.targets_.isEmpty()) {
            if (targetsBuilder_.isEmpty()) {
              targetsBuilder_.dispose();
              targetsBuilder_ = null;
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000002);
              targetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTargetsFieldBuilder() : null;
            } else {
              targetsBuilder_.addAllMessages(other.targets_);
            }
          }
        }
        if (other.getOwner() != com.google.protobuf.ByteString.EMPTY) {
          setOwner(other.getOwner());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.Token parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.Token) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.util.List<username.Codec.BlockchainAddress> targets_ =
        java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          targets_ = new java.util.ArrayList<username.Codec.BlockchainAddress>(targets_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder> targetsBuilder_;

      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public java.util.List<username.Codec.BlockchainAddress> getTargetsList() {
        if (targetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targets_);
        } else {
          return targetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public int getTargetsCount() {
        if (targetsBuilder_ == null) {
          return targets_.size();
        } else {
          return targetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public username.Codec.BlockchainAddress getTargets(int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);
        } else {
          return targetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder setTargets(
          int index, username.Codec.BlockchainAddress value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.set(index, value);
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder setTargets(
          int index, username.Codec.BlockchainAddress.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder addTargets(username.Codec.BlockchainAddress value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder addTargets(
          int index, username.Codec.BlockchainAddress value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(index, value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder addTargets(
          username.Codec.BlockchainAddress.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder addTargets(
          int index, username.Codec.BlockchainAddress.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends username.Codec.BlockchainAddress> values) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targets_);
          onChanged();
        } else {
          targetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public Builder removeTargets(int index) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.remove(index);
          onChanged();
        } else {
          targetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public username.Codec.BlockchainAddress.Builder getTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public username.Codec.BlockchainAddressOrBuilder getTargetsOrBuilder(
          int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);  } else {
          return targetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
           getTargetsOrBuilderList() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targets_);
        }
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public username.Codec.BlockchainAddress.Builder addTargetsBuilder() {
        return getTargetsFieldBuilder().addBuilder(
            username.Codec.BlockchainAddress.getDefaultInstance());
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public username.Codec.BlockchainAddress.Builder addTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().addBuilder(
            index, username.Codec.BlockchainAddress.getDefaultInstance());
      }
      /**
       * <pre>
       * Targets specifies where this username token points to. This must be at
       * least one blockchain address elemenet.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 2;</code>
       */
      public java.util.List<username.Codec.BlockchainAddress.Builder> 
           getTargetsBuilderList() {
        return getTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder>(
                  targets_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }

      private com.google.protobuf.ByteString owner_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Owner is a weave.Address that controls this token. Only the owner can
       * modify a username token.
       * </pre>
       *
       * <code>bytes owner = 3;</code>
       */
      public com.google.protobuf.ByteString getOwner() {
        return owner_;
      }
      /**
       * <pre>
       * Owner is a weave.Address that controls this token. Only the owner can
       * modify a username token.
       * </pre>
       *
       * <code>bytes owner = 3;</code>
       */
      public Builder setOwner(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Owner is a weave.Address that controls this token. Only the owner can
       * modify a username token.
       * </pre>
       *
       * <code>bytes owner = 3;</code>
       */
      public Builder clearOwner() {
        
        owner_ = getDefaultInstance().getOwner();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.Token)
    }

    // @@protoc_insertion_point(class_scope:username.Token)
    private static final username.Codec.Token DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.Token();
    }

    public static username.Codec.Token getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Token>
        PARSER = new com.google.protobuf.AbstractParser<Token>() {
      @java.lang.Override
      public Token parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Token(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Token> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Token> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.Token getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface BlockchainAddressOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.BlockchainAddress)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * An arbitrary blockchain ID.
     * </pre>
     *
     * <code>string blockchain_id = 1;</code>
     */
    java.lang.String getBlockchainId();
    /**
     * <pre>
     * An arbitrary blockchain ID.
     * </pre>
     *
     * <code>string blockchain_id = 1;</code>
     */
    com.google.protobuf.ByteString
        getBlockchainIdBytes();

    /**
     * <pre>
     * An address on the specified blockchain network. Address is not a
     * weave.Address as we cannot know what is the format of an address on the
     * chain that this token instance links to. Because we do not know the rules
     * to validate an address for any blockchain ID, this is an arbitrary bulk of
     * data.
     * It is more convinient to always use encoded representation of each address
     * and store it as a string. Using bytes while compact is not as comfortable
     * to use.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    java.lang.String getAddress();
    /**
     * <pre>
     * An address on the specified blockchain network. Address is not a
     * weave.Address as we cannot know what is the format of an address on the
     * chain that this token instance links to. Because we do not know the rules
     * to validate an address for any blockchain ID, this is an arbitrary bulk of
     * data.
     * It is more convinient to always use encoded representation of each address
     * and store it as a string. Using bytes while compact is not as comfortable
     * to use.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    com.google.protobuf.ByteString
        getAddressBytes();
  }
  /**
   * <pre>
   * BlockchainAddress represents a blochain address. This structure clubs together
   * blokchain ID together with an address on that network. It is used to point
   * to an address on any blockchain network.
   * </pre>
   *
   * Protobuf type {@code username.BlockchainAddress}
   */
  public  static final class BlockchainAddress extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.BlockchainAddress)
      BlockchainAddressOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use BlockchainAddress.newBuilder() to construct.
    private BlockchainAddress(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private BlockchainAddress() {
      blockchainId_ = "";
      address_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private BlockchainAddress(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              java.lang.String s = input.readStringRequireUtf8();

              blockchainId_ = s;
              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              address_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_BlockchainAddress_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_BlockchainAddress_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.BlockchainAddress.class, username.Codec.BlockchainAddress.Builder.class);
    }

    public static final int BLOCKCHAIN_ID_FIELD_NUMBER = 1;
    private volatile java.lang.Object blockchainId_;
    /**
     * <pre>
     * An arbitrary blockchain ID.
     * </pre>
     *
     * <code>string blockchain_id = 1;</code>
     */
    public java.lang.String getBlockchainId() {
      java.lang.Object ref = blockchainId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        blockchainId_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An arbitrary blockchain ID.
     * </pre>
     *
     * <code>string blockchain_id = 1;</code>
     */
    public com.google.protobuf.ByteString
        getBlockchainIdBytes() {
      java.lang.Object ref = blockchainId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        blockchainId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ADDRESS_FIELD_NUMBER = 2;
    private volatile java.lang.Object address_;
    /**
     * <pre>
     * An address on the specified blockchain network. Address is not a
     * weave.Address as we cannot know what is the format of an address on the
     * chain that this token instance links to. Because we do not know the rules
     * to validate an address for any blockchain ID, this is an arbitrary bulk of
     * data.
     * It is more convinient to always use encoded representation of each address
     * and store it as a string. Using bytes while compact is not as comfortable
     * to use.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    public java.lang.String getAddress() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        address_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * An address on the specified blockchain network. Address is not a
     * weave.Address as we cannot know what is the format of an address on the
     * chain that this token instance links to. Because we do not know the rules
     * to validate an address for any blockchain ID, this is an arbitrary bulk of
     * data.
     * It is more convinient to always use encoded representation of each address
     * and store it as a string. Using bytes while compact is not as comfortable
     * to use.
     * </pre>
     *
     * <code>string address = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      java.lang.Object ref = address_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!getBlockchainIdBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 1, blockchainId_);
      }
      if (!getAddressBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, address_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!getBlockchainIdBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, blockchainId_);
      }
      if (!getAddressBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, address_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.BlockchainAddress)) {
        return super.equals(obj);
      }
      username.Codec.BlockchainAddress other = (username.Codec.BlockchainAddress) obj;

      if (!getBlockchainId()
          .equals(other.getBlockchainId())) return false;
      if (!getAddress()
          .equals(other.getAddress())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + BLOCKCHAIN_ID_FIELD_NUMBER;
      hash = (53 * hash) + getBlockchainId().hashCode();
      hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
      hash = (53 * hash) + getAddress().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.BlockchainAddress parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.BlockchainAddress parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.BlockchainAddress parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.BlockchainAddress parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.BlockchainAddress parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.BlockchainAddress parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.BlockchainAddress prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * BlockchainAddress represents a blochain address. This structure clubs together
     * blokchain ID together with an address on that network. It is used to point
     * to an address on any blockchain network.
     * </pre>
     *
     * Protobuf type {@code username.BlockchainAddress}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.BlockchainAddress)
        username.Codec.BlockchainAddressOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_BlockchainAddress_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_BlockchainAddress_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.BlockchainAddress.class, username.Codec.BlockchainAddress.Builder.class);
      }

      // Construct using username.Codec.BlockchainAddress.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        blockchainId_ = "";

        address_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_BlockchainAddress_descriptor;
      }

      @java.lang.Override
      public username.Codec.BlockchainAddress getDefaultInstanceForType() {
        return username.Codec.BlockchainAddress.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.BlockchainAddress build() {
        username.Codec.BlockchainAddress result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.BlockchainAddress buildPartial() {
        username.Codec.BlockchainAddress result = new username.Codec.BlockchainAddress(this);
        result.blockchainId_ = blockchainId_;
        result.address_ = address_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.BlockchainAddress) {
          return mergeFrom((username.Codec.BlockchainAddress)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.BlockchainAddress other) {
        if (other == username.Codec.BlockchainAddress.getDefaultInstance()) return this;
        if (!other.getBlockchainId().isEmpty()) {
          blockchainId_ = other.blockchainId_;
          onChanged();
        }
        if (!other.getAddress().isEmpty()) {
          address_ = other.address_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.BlockchainAddress parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.BlockchainAddress) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private java.lang.Object blockchainId_ = "";
      /**
       * <pre>
       * An arbitrary blockchain ID.
       * </pre>
       *
       * <code>string blockchain_id = 1;</code>
       */
      public java.lang.String getBlockchainId() {
        java.lang.Object ref = blockchainId_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          blockchainId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An arbitrary blockchain ID.
       * </pre>
       *
       * <code>string blockchain_id = 1;</code>
       */
      public com.google.protobuf.ByteString
          getBlockchainIdBytes() {
        java.lang.Object ref = blockchainId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          blockchainId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An arbitrary blockchain ID.
       * </pre>
       *
       * <code>string blockchain_id = 1;</code>
       */
      public Builder setBlockchainId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        blockchainId_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An arbitrary blockchain ID.
       * </pre>
       *
       * <code>string blockchain_id = 1;</code>
       */
      public Builder clearBlockchainId() {
        
        blockchainId_ = getDefaultInstance().getBlockchainId();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An arbitrary blockchain ID.
       * </pre>
       *
       * <code>string blockchain_id = 1;</code>
       */
      public Builder setBlockchainIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        blockchainId_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object address_ = "";
      /**
       * <pre>
       * An address on the specified blockchain network. Address is not a
       * weave.Address as we cannot know what is the format of an address on the
       * chain that this token instance links to. Because we do not know the rules
       * to validate an address for any blockchain ID, this is an arbitrary bulk of
       * data.
       * It is more convinient to always use encoded representation of each address
       * and store it as a string. Using bytes while compact is not as comfortable
       * to use.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public java.lang.String getAddress() {
        java.lang.Object ref = address_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          address_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * An address on the specified blockchain network. Address is not a
       * weave.Address as we cannot know what is the format of an address on the
       * chain that this token instance links to. Because we do not know the rules
       * to validate an address for any blockchain ID, this is an arbitrary bulk of
       * data.
       * It is more convinient to always use encoded representation of each address
       * and store it as a string. Using bytes while compact is not as comfortable
       * to use.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAddressBytes() {
        java.lang.Object ref = address_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          address_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * An address on the specified blockchain network. Address is not a
       * weave.Address as we cannot know what is the format of an address on the
       * chain that this token instance links to. Because we do not know the rules
       * to validate an address for any blockchain ID, this is an arbitrary bulk of
       * data.
       * It is more convinient to always use encoded representation of each address
       * and store it as a string. Using bytes while compact is not as comfortable
       * to use.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public Builder setAddress(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        address_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An address on the specified blockchain network. Address is not a
       * weave.Address as we cannot know what is the format of an address on the
       * chain that this token instance links to. Because we do not know the rules
       * to validate an address for any blockchain ID, this is an arbitrary bulk of
       * data.
       * It is more convinient to always use encoded representation of each address
       * and store it as a string. Using bytes while compact is not as comfortable
       * to use.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public Builder clearAddress() {
        
        address_ = getDefaultInstance().getAddress();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * An address on the specified blockchain network. Address is not a
       * weave.Address as we cannot know what is the format of an address on the
       * chain that this token instance links to. Because we do not know the rules
       * to validate an address for any blockchain ID, this is an arbitrary bulk of
       * data.
       * It is more convinient to always use encoded representation of each address
       * and store it as a string. Using bytes while compact is not as comfortable
       * to use.
       * </pre>
       *
       * <code>string address = 2;</code>
       */
      public Builder setAddressBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        address_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.BlockchainAddress)
    }

    // @@protoc_insertion_point(class_scope:username.BlockchainAddress)
    private static final username.Codec.BlockchainAddress DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.BlockchainAddress();
    }

    public static username.Codec.BlockchainAddress getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<BlockchainAddress>
        PARSER = new com.google.protobuf.AbstractParser<BlockchainAddress>() {
      @java.lang.Override
      public BlockchainAddress parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BlockchainAddress(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<BlockchainAddress> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<BlockchainAddress> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.BlockchainAddress getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface RegisterTokenMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.RegisterTokenMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    java.lang.String getUsername();
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    java.util.List<username.Codec.BlockchainAddress> 
        getTargetsList();
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    username.Codec.BlockchainAddress getTargets(int index);
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    int getTargetsCount();
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
        getTargetsOrBuilderList();
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    username.Codec.BlockchainAddressOrBuilder getTargetsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * RegisterTokenMsg is creating a new username token. The owner is always set
   * to the main signer.
   * </pre>
   *
   * Protobuf type {@code username.RegisterTokenMsg}
   */
  public  static final class RegisterTokenMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.RegisterTokenMsg)
      RegisterTokenMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use RegisterTokenMsg.newBuilder() to construct.
    private RegisterTokenMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private RegisterTokenMsg() {
      username_ = "";
      targets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private RegisterTokenMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              username_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                targets_ = new java.util.ArrayList<username.Codec.BlockchainAddress>();
                mutable_bitField0_ |= 0x00000004;
              }
              targets_.add(
                  input.readMessage(username.Codec.BlockchainAddress.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          targets_ = java.util.Collections.unmodifiableList(targets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_RegisterTokenMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_RegisterTokenMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.RegisterTokenMsg.class, username.Codec.RegisterTokenMsg.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object username_;
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        username_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TARGETS_FIELD_NUMBER = 3;
    private java.util.List<username.Codec.BlockchainAddress> targets_;
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    public java.util.List<username.Codec.BlockchainAddress> getTargetsList() {
      return targets_;
    }
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    public java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
        getTargetsOrBuilderList() {
      return targets_;
    }
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    public int getTargetsCount() {
      return targets_.size();
    }
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    public username.Codec.BlockchainAddress getTargets(int index) {
      return targets_.get(index);
    }
    /**
     * <pre>
     * Targets is a blockchain address list that this token should point to.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress targets = 3;</code>
     */
    public username.Codec.BlockchainAddressOrBuilder getTargetsOrBuilder(
        int index) {
      return targets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (!getUsernameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, username_);
      }
      for (int i = 0; i < targets_.size(); i++) {
        output.writeMessage(3, targets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (!getUsernameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, username_);
      }
      for (int i = 0; i < targets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, targets_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.RegisterTokenMsg)) {
        return super.equals(obj);
      }
      username.Codec.RegisterTokenMsg other = (username.Codec.RegisterTokenMsg) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getUsername()
          .equals(other.getUsername())) return false;
      if (!getTargetsList()
          .equals(other.getTargetsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUsername().hashCode();
      if (getTargetsCount() > 0) {
        hash = (37 * hash) + TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getTargetsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.RegisterTokenMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.RegisterTokenMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.RegisterTokenMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.RegisterTokenMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.RegisterTokenMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * RegisterTokenMsg is creating a new username token. The owner is always set
     * to the main signer.
     * </pre>
     *
     * Protobuf type {@code username.RegisterTokenMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.RegisterTokenMsg)
        username.Codec.RegisterTokenMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_RegisterTokenMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_RegisterTokenMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.RegisterTokenMsg.class, username.Codec.RegisterTokenMsg.Builder.class);
      }

      // Construct using username.Codec.RegisterTokenMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getTargetsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        username_ = "";

        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_RegisterTokenMsg_descriptor;
      }

      @java.lang.Override
      public username.Codec.RegisterTokenMsg getDefaultInstanceForType() {
        return username.Codec.RegisterTokenMsg.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.RegisterTokenMsg build() {
        username.Codec.RegisterTokenMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.RegisterTokenMsg buildPartial() {
        username.Codec.RegisterTokenMsg result = new username.Codec.RegisterTokenMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.username_ = username_;
        if (targetsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            targets_ = java.util.Collections.unmodifiableList(targets_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.targets_ = targets_;
        } else {
          result.targets_ = targetsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.RegisterTokenMsg) {
          return mergeFrom((username.Codec.RegisterTokenMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.RegisterTokenMsg other) {
        if (other == username.Codec.RegisterTokenMsg.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (!other.getUsername().isEmpty()) {
          username_ = other.username_;
          onChanged();
        }
        if (targetsBuilder_ == null) {
          if (!other.targets_.isEmpty()) {
            if (targets_.isEmpty()) {
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureTargetsIsMutable();
              targets_.addAll(other.targets_);
            }
            onChanged();
          }
        } else {
          if (!other.targets_.isEmpty()) {
            if (targetsBuilder_.isEmpty()) {
              targetsBuilder_.dispose();
              targetsBuilder_ = null;
              targets_ = other.targets_;
              bitField0_ = (bitField0_ & ~0x00000004);
              targetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getTargetsFieldBuilder() : null;
            } else {
              targetsBuilder_.addAllMessages(other.targets_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.RegisterTokenMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.RegisterTokenMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.lang.Object username_ = "";
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder clearUsername() {
        
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        username_ = value;
        onChanged();
        return this;
      }

      private java.util.List<username.Codec.BlockchainAddress> targets_ =
        java.util.Collections.emptyList();
      private void ensureTargetsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          targets_ = new java.util.ArrayList<username.Codec.BlockchainAddress>(targets_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder> targetsBuilder_;

      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public java.util.List<username.Codec.BlockchainAddress> getTargetsList() {
        if (targetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(targets_);
        } else {
          return targetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public int getTargetsCount() {
        if (targetsBuilder_ == null) {
          return targets_.size();
        } else {
          return targetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public username.Codec.BlockchainAddress getTargets(int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);
        } else {
          return targetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder setTargets(
          int index, username.Codec.BlockchainAddress value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.set(index, value);
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder setTargets(
          int index, username.Codec.BlockchainAddress.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.set(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder addTargets(username.Codec.BlockchainAddress value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder addTargets(
          int index, username.Codec.BlockchainAddress value) {
        if (targetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTargetsIsMutable();
          targets_.add(index, value);
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder addTargets(
          username.Codec.BlockchainAddress.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder addTargets(
          int index, username.Codec.BlockchainAddress.Builder builderForValue) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.add(index, builderForValue.build());
          onChanged();
        } else {
          targetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder addAllTargets(
          java.lang.Iterable<? extends username.Codec.BlockchainAddress> values) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, targets_);
          onChanged();
        } else {
          targetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder clearTargets() {
        if (targetsBuilder_ == null) {
          targets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          targetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public Builder removeTargets(int index) {
        if (targetsBuilder_ == null) {
          ensureTargetsIsMutable();
          targets_.remove(index);
          onChanged();
        } else {
          targetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public username.Codec.BlockchainAddress.Builder getTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public username.Codec.BlockchainAddressOrBuilder getTargetsOrBuilder(
          int index) {
        if (targetsBuilder_ == null) {
          return targets_.get(index);  } else {
          return targetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
           getTargetsOrBuilderList() {
        if (targetsBuilder_ != null) {
          return targetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(targets_);
        }
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public username.Codec.BlockchainAddress.Builder addTargetsBuilder() {
        return getTargetsFieldBuilder().addBuilder(
            username.Codec.BlockchainAddress.getDefaultInstance());
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public username.Codec.BlockchainAddress.Builder addTargetsBuilder(
          int index) {
        return getTargetsFieldBuilder().addBuilder(
            index, username.Codec.BlockchainAddress.getDefaultInstance());
      }
      /**
       * <pre>
       * Targets is a blockchain address list that this token should point to.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress targets = 3;</code>
       */
      public java.util.List<username.Codec.BlockchainAddress.Builder> 
           getTargetsBuilderList() {
        return getTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder> 
          getTargetsFieldBuilder() {
        if (targetsBuilder_ == null) {
          targetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder>(
                  targets_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          targets_ = null;
        }
        return targetsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.RegisterTokenMsg)
    }

    // @@protoc_insertion_point(class_scope:username.RegisterTokenMsg)
    private static final username.Codec.RegisterTokenMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.RegisterTokenMsg();
    }

    public static username.Codec.RegisterTokenMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<RegisterTokenMsg>
        PARSER = new com.google.protobuf.AbstractParser<RegisterTokenMsg>() {
      @java.lang.Override
      public RegisterTokenMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RegisterTokenMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<RegisterTokenMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<RegisterTokenMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.RegisterTokenMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface TransferTokenMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.TransferTokenMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    java.lang.String getUsername();
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <pre>
     * Owner is a weave address that will owns this token after the change.
     * </pre>
     *
     * <code>bytes new_owner = 3;</code>
     */
    com.google.protobuf.ByteString getNewOwner();
  }
  /**
   * <pre>
   * TransferTokenMsg is a request to transfer an ownership of a token. The
   * mesage must be signed by the current token owner. Acceptance of the new
   * owner is not required in order to succeed.
   * </pre>
   *
   * Protobuf type {@code username.TransferTokenMsg}
   */
  public  static final class TransferTokenMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.TransferTokenMsg)
      TransferTokenMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TransferTokenMsg.newBuilder() to construct.
    private TransferTokenMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TransferTokenMsg() {
      username_ = "";
      newOwner_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TransferTokenMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              username_ = s;
              break;
            }
            case 26: {

              newOwner_ = input.readBytes();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_TransferTokenMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_TransferTokenMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.TransferTokenMsg.class, username.Codec.TransferTokenMsg.Builder.class);
    }

    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object username_;
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        username_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEW_OWNER_FIELD_NUMBER = 3;
    private com.google.protobuf.ByteString newOwner_;
    /**
     * <pre>
     * Owner is a weave address that will owns this token after the change.
     * </pre>
     *
     * <code>bytes new_owner = 3;</code>
     */
    public com.google.protobuf.ByteString getNewOwner() {
      return newOwner_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (!getUsernameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, username_);
      }
      if (!newOwner_.isEmpty()) {
        output.writeBytes(3, newOwner_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (!getUsernameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, username_);
      }
      if (!newOwner_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, newOwner_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.TransferTokenMsg)) {
        return super.equals(obj);
      }
      username.Codec.TransferTokenMsg other = (username.Codec.TransferTokenMsg) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getUsername()
          .equals(other.getUsername())) return false;
      if (!getNewOwner()
          .equals(other.getNewOwner())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUsername().hashCode();
      hash = (37 * hash) + NEW_OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getNewOwner().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.TransferTokenMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.TransferTokenMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.TransferTokenMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.TransferTokenMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.TransferTokenMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.TransferTokenMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.TransferTokenMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TransferTokenMsg is a request to transfer an ownership of a token. The
     * mesage must be signed by the current token owner. Acceptance of the new
     * owner is not required in order to succeed.
     * </pre>
     *
     * Protobuf type {@code username.TransferTokenMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.TransferTokenMsg)
        username.Codec.TransferTokenMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_TransferTokenMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_TransferTokenMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.TransferTokenMsg.class, username.Codec.TransferTokenMsg.Builder.class);
      }

      // Construct using username.Codec.TransferTokenMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        username_ = "";

        newOwner_ = com.google.protobuf.ByteString.EMPTY;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_TransferTokenMsg_descriptor;
      }

      @java.lang.Override
      public username.Codec.TransferTokenMsg getDefaultInstanceForType() {
        return username.Codec.TransferTokenMsg.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.TransferTokenMsg build() {
        username.Codec.TransferTokenMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.TransferTokenMsg buildPartial() {
        username.Codec.TransferTokenMsg result = new username.Codec.TransferTokenMsg(this);
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.username_ = username_;
        result.newOwner_ = newOwner_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.TransferTokenMsg) {
          return mergeFrom((username.Codec.TransferTokenMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.TransferTokenMsg other) {
        if (other == username.Codec.TransferTokenMsg.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (!other.getUsername().isEmpty()) {
          username_ = other.username_;
          onChanged();
        }
        if (other.getNewOwner() != com.google.protobuf.ByteString.EMPTY) {
          setNewOwner(other.getNewOwner());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.TransferTokenMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.TransferTokenMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.lang.Object username_ = "";
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder clearUsername() {
        
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        username_ = value;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString newOwner_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Owner is a weave address that will owns this token after the change.
       * </pre>
       *
       * <code>bytes new_owner = 3;</code>
       */
      public com.google.protobuf.ByteString getNewOwner() {
        return newOwner_;
      }
      /**
       * <pre>
       * Owner is a weave address that will owns this token after the change.
       * </pre>
       *
       * <code>bytes new_owner = 3;</code>
       */
      public Builder setNewOwner(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        newOwner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Owner is a weave address that will owns this token after the change.
       * </pre>
       *
       * <code>bytes new_owner = 3;</code>
       */
      public Builder clearNewOwner() {
        
        newOwner_ = getDefaultInstance().getNewOwner();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.TransferTokenMsg)
    }

    // @@protoc_insertion_point(class_scope:username.TransferTokenMsg)
    private static final username.Codec.TransferTokenMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.TransferTokenMsg();
    }

    public static username.Codec.TransferTokenMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TransferTokenMsg>
        PARSER = new com.google.protobuf.AbstractParser<TransferTokenMsg>() {
      @java.lang.Override
      public TransferTokenMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TransferTokenMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TransferTokenMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TransferTokenMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.TransferTokenMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ChangeTokenTargetsMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.ChangeTokenTargetsMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    java.lang.String getUsername();
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    com.google.protobuf.ByteString
        getUsernameBytes();

    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    java.util.List<username.Codec.BlockchainAddress> 
        getNewTargetsList();
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    username.Codec.BlockchainAddress getNewTargets(int index);
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    int getNewTargetsCount();
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
        getNewTargetsOrBuilderList();
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    username.Codec.BlockchainAddressOrBuilder getNewTargetsOrBuilder(
        int index);
  }
  /**
   * <pre>
   * ChangeTokenTargetsMsg is a request to change the address that this token
   * points to. Only the owner of a token can request this operation.
   * </pre>
   *
   * Protobuf type {@code username.ChangeTokenTargetsMsg}
   */
  public  static final class ChangeTokenTargetsMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.ChangeTokenTargetsMsg)
      ChangeTokenTargetsMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ChangeTokenTargetsMsg.newBuilder() to construct.
    private ChangeTokenTargetsMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ChangeTokenTargetsMsg() {
      username_ = "";
      newTargets_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private ChangeTokenTargetsMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              java.lang.String s = input.readStringRequireUtf8();

              username_ = s;
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) != 0)) {
                newTargets_ = new java.util.ArrayList<username.Codec.BlockchainAddress>();
                mutable_bitField0_ |= 0x00000004;
              }
              newTargets_.add(
                  input.readMessage(username.Codec.BlockchainAddress.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) != 0)) {
          newTargets_ = java.util.Collections.unmodifiableList(newTargets_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_ChangeTokenTargetsMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_ChangeTokenTargetsMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.ChangeTokenTargetsMsg.class, username.Codec.ChangeTokenTargetsMsg.Builder.class);
    }

    private int bitField0_;
    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int USERNAME_FIELD_NUMBER = 2;
    private volatile java.lang.Object username_;
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    public java.lang.String getUsername() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        username_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Username is the unique name of the token, for example alice*iov
     * </pre>
     *
     * <code>string username = 2;</code>
     */
    public com.google.protobuf.ByteString
        getUsernameBytes() {
      java.lang.Object ref = username_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        username_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NEW_TARGETS_FIELD_NUMBER = 3;
    private java.util.List<username.Codec.BlockchainAddress> newTargets_;
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    public java.util.List<username.Codec.BlockchainAddress> getNewTargetsList() {
      return newTargets_;
    }
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    public java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
        getNewTargetsOrBuilderList() {
      return newTargets_;
    }
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    public int getNewTargetsCount() {
      return newTargets_.size();
    }
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    public username.Codec.BlockchainAddress getNewTargets(int index) {
      return newTargets_.get(index);
    }
    /**
     * <pre>
     * New targets is a list of blockchain addresses that this token should point
     * to after the change. Old list is overwritten with what is provided.
     * </pre>
     *
     * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
     */
    public username.Codec.BlockchainAddressOrBuilder getNewTargetsOrBuilder(
        int index) {
      return newTargets_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (!getUsernameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, username_);
      }
      for (int i = 0; i < newTargets_.size(); i++) {
        output.writeMessage(3, newTargets_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (!getUsernameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, username_);
      }
      for (int i = 0; i < newTargets_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, newTargets_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.ChangeTokenTargetsMsg)) {
        return super.equals(obj);
      }
      username.Codec.ChangeTokenTargetsMsg other = (username.Codec.ChangeTokenTargetsMsg) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getUsername()
          .equals(other.getUsername())) return false;
      if (!getNewTargetsList()
          .equals(other.getNewTargetsList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (37 * hash) + USERNAME_FIELD_NUMBER;
      hash = (53 * hash) + getUsername().hashCode();
      if (getNewTargetsCount() > 0) {
        hash = (37 * hash) + NEW_TARGETS_FIELD_NUMBER;
        hash = (53 * hash) + getNewTargetsList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.ChangeTokenTargetsMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.ChangeTokenTargetsMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ChangeTokenTargetsMsg is a request to change the address that this token
     * points to. Only the owner of a token can request this operation.
     * </pre>
     *
     * Protobuf type {@code username.ChangeTokenTargetsMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.ChangeTokenTargetsMsg)
        username.Codec.ChangeTokenTargetsMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_ChangeTokenTargetsMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_ChangeTokenTargetsMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.ChangeTokenTargetsMsg.class, username.Codec.ChangeTokenTargetsMsg.Builder.class);
      }

      // Construct using username.Codec.ChangeTokenTargetsMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getNewTargetsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        username_ = "";

        if (newTargetsBuilder_ == null) {
          newTargets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          newTargetsBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_ChangeTokenTargetsMsg_descriptor;
      }

      @java.lang.Override
      public username.Codec.ChangeTokenTargetsMsg getDefaultInstanceForType() {
        return username.Codec.ChangeTokenTargetsMsg.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.ChangeTokenTargetsMsg build() {
        username.Codec.ChangeTokenTargetsMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.ChangeTokenTargetsMsg buildPartial() {
        username.Codec.ChangeTokenTargetsMsg result = new username.Codec.ChangeTokenTargetsMsg(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.username_ = username_;
        if (newTargetsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            newTargets_ = java.util.Collections.unmodifiableList(newTargets_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.newTargets_ = newTargets_;
        } else {
          result.newTargets_ = newTargetsBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.ChangeTokenTargetsMsg) {
          return mergeFrom((username.Codec.ChangeTokenTargetsMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.ChangeTokenTargetsMsg other) {
        if (other == username.Codec.ChangeTokenTargetsMsg.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (!other.getUsername().isEmpty()) {
          username_ = other.username_;
          onChanged();
        }
        if (newTargetsBuilder_ == null) {
          if (!other.newTargets_.isEmpty()) {
            if (newTargets_.isEmpty()) {
              newTargets_ = other.newTargets_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureNewTargetsIsMutable();
              newTargets_.addAll(other.newTargets_);
            }
            onChanged();
          }
        } else {
          if (!other.newTargets_.isEmpty()) {
            if (newTargetsBuilder_.isEmpty()) {
              newTargetsBuilder_.dispose();
              newTargetsBuilder_ = null;
              newTargets_ = other.newTargets_;
              bitField0_ = (bitField0_ & ~0x00000004);
              newTargetsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getNewTargetsFieldBuilder() : null;
            } else {
              newTargetsBuilder_.addAllMessages(other.newTargets_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.ChangeTokenTargetsMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.ChangeTokenTargetsMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private java.lang.Object username_ = "";
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public java.lang.String getUsername() {
        java.lang.Object ref = username_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          username_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public com.google.protobuf.ByteString
          getUsernameBytes() {
        java.lang.Object ref = username_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          username_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder setUsername(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        username_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder clearUsername() {
        
        username_ = getDefaultInstance().getUsername();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Username is the unique name of the token, for example alice*iov
       * </pre>
       *
       * <code>string username = 2;</code>
       */
      public Builder setUsernameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        username_ = value;
        onChanged();
        return this;
      }

      private java.util.List<username.Codec.BlockchainAddress> newTargets_ =
        java.util.Collections.emptyList();
      private void ensureNewTargetsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          newTargets_ = new java.util.ArrayList<username.Codec.BlockchainAddress>(newTargets_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder> newTargetsBuilder_;

      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public java.util.List<username.Codec.BlockchainAddress> getNewTargetsList() {
        if (newTargetsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(newTargets_);
        } else {
          return newTargetsBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public int getNewTargetsCount() {
        if (newTargetsBuilder_ == null) {
          return newTargets_.size();
        } else {
          return newTargetsBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public username.Codec.BlockchainAddress getNewTargets(int index) {
        if (newTargetsBuilder_ == null) {
          return newTargets_.get(index);
        } else {
          return newTargetsBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder setNewTargets(
          int index, username.Codec.BlockchainAddress value) {
        if (newTargetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewTargetsIsMutable();
          newTargets_.set(index, value);
          onChanged();
        } else {
          newTargetsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder setNewTargets(
          int index, username.Codec.BlockchainAddress.Builder builderForValue) {
        if (newTargetsBuilder_ == null) {
          ensureNewTargetsIsMutable();
          newTargets_.set(index, builderForValue.build());
          onChanged();
        } else {
          newTargetsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder addNewTargets(username.Codec.BlockchainAddress value) {
        if (newTargetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewTargetsIsMutable();
          newTargets_.add(value);
          onChanged();
        } else {
          newTargetsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder addNewTargets(
          int index, username.Codec.BlockchainAddress value) {
        if (newTargetsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNewTargetsIsMutable();
          newTargets_.add(index, value);
          onChanged();
        } else {
          newTargetsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder addNewTargets(
          username.Codec.BlockchainAddress.Builder builderForValue) {
        if (newTargetsBuilder_ == null) {
          ensureNewTargetsIsMutable();
          newTargets_.add(builderForValue.build());
          onChanged();
        } else {
          newTargetsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder addNewTargets(
          int index, username.Codec.BlockchainAddress.Builder builderForValue) {
        if (newTargetsBuilder_ == null) {
          ensureNewTargetsIsMutable();
          newTargets_.add(index, builderForValue.build());
          onChanged();
        } else {
          newTargetsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder addAllNewTargets(
          java.lang.Iterable<? extends username.Codec.BlockchainAddress> values) {
        if (newTargetsBuilder_ == null) {
          ensureNewTargetsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, newTargets_);
          onChanged();
        } else {
          newTargetsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder clearNewTargets() {
        if (newTargetsBuilder_ == null) {
          newTargets_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          newTargetsBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public Builder removeNewTargets(int index) {
        if (newTargetsBuilder_ == null) {
          ensureNewTargetsIsMutable();
          newTargets_.remove(index);
          onChanged();
        } else {
          newTargetsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public username.Codec.BlockchainAddress.Builder getNewTargetsBuilder(
          int index) {
        return getNewTargetsFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public username.Codec.BlockchainAddressOrBuilder getNewTargetsOrBuilder(
          int index) {
        if (newTargetsBuilder_ == null) {
          return newTargets_.get(index);  } else {
          return newTargetsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public java.util.List<? extends username.Codec.BlockchainAddressOrBuilder> 
           getNewTargetsOrBuilderList() {
        if (newTargetsBuilder_ != null) {
          return newTargetsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(newTargets_);
        }
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public username.Codec.BlockchainAddress.Builder addNewTargetsBuilder() {
        return getNewTargetsFieldBuilder().addBuilder(
            username.Codec.BlockchainAddress.getDefaultInstance());
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public username.Codec.BlockchainAddress.Builder addNewTargetsBuilder(
          int index) {
        return getNewTargetsFieldBuilder().addBuilder(
            index, username.Codec.BlockchainAddress.getDefaultInstance());
      }
      /**
       * <pre>
       * New targets is a list of blockchain addresses that this token should point
       * to after the change. Old list is overwritten with what is provided.
       * </pre>
       *
       * <code>repeated .username.BlockchainAddress new_targets = 3;</code>
       */
      public java.util.List<username.Codec.BlockchainAddress.Builder> 
           getNewTargetsBuilderList() {
        return getNewTargetsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder> 
          getNewTargetsFieldBuilder() {
        if (newTargetsBuilder_ == null) {
          newTargetsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              username.Codec.BlockchainAddress, username.Codec.BlockchainAddress.Builder, username.Codec.BlockchainAddressOrBuilder>(
                  newTargets_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          newTargets_ = null;
        }
        return newTargetsBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.ChangeTokenTargetsMsg)
    }

    // @@protoc_insertion_point(class_scope:username.ChangeTokenTargetsMsg)
    private static final username.Codec.ChangeTokenTargetsMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.ChangeTokenTargetsMsg();
    }

    public static username.Codec.ChangeTokenTargetsMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ChangeTokenTargetsMsg>
        PARSER = new com.google.protobuf.AbstractParser<ChangeTokenTargetsMsg>() {
      @java.lang.Override
      public ChangeTokenTargetsMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ChangeTokenTargetsMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<ChangeTokenTargetsMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ChangeTokenTargetsMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.ChangeTokenTargetsMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ConfigurationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.Configuration)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <pre>
     * Owner is present to implement gconf.OwnedConfig interface
     * This defines the Address that is allowed to update the Configuration object and is
     * needed to make use of gconf.NewUpdateConfigurationHandler
     * </pre>
     *
     * <code>bytes owner = 2;</code>
     */
    com.google.protobuf.ByteString getOwner();

    /**
     * <pre>
     * Valid username name defines a regular expression that every valid username
     * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_name = 3;</code>
     */
    java.lang.String getValidUsernameName();
    /**
     * <pre>
     * Valid username name defines a regular expression that every valid username
     * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_name = 3;</code>
     */
    com.google.protobuf.ByteString
        getValidUsernameNameBytes();

    /**
     * <pre>
     * Valid username label defines a regular expression that every valid
     * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_label = 4;</code>
     */
    java.lang.String getValidUsernameLabel();
    /**
     * <pre>
     * Valid username label defines a regular expression that every valid
     * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_label = 4;</code>
     */
    com.google.protobuf.ByteString
        getValidUsernameLabelBytes();
  }
  /**
   * <pre>
   * Configuration is a dynamic configuration used by this extension, managed by
   * the functionality provided by gconf package.
   * </pre>
   *
   * Protobuf type {@code username.Configuration}
   */
  public  static final class Configuration extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.Configuration)
      ConfigurationOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Configuration.newBuilder() to construct.
    private Configuration(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Configuration() {
      owner_ = com.google.protobuf.ByteString.EMPTY;
      validUsernameName_ = "";
      validUsernameLabel_ = "";
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Configuration(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {

              owner_ = input.readBytes();
              break;
            }
            case 26: {
              java.lang.String s = input.readStringRequireUtf8();

              validUsernameName_ = s;
              break;
            }
            case 34: {
              java.lang.String s = input.readStringRequireUtf8();

              validUsernameLabel_ = s;
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_Configuration_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_Configuration_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.Configuration.class, username.Codec.Configuration.Builder.class);
    }

    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int OWNER_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString owner_;
    /**
     * <pre>
     * Owner is present to implement gconf.OwnedConfig interface
     * This defines the Address that is allowed to update the Configuration object and is
     * needed to make use of gconf.NewUpdateConfigurationHandler
     * </pre>
     *
     * <code>bytes owner = 2;</code>
     */
    public com.google.protobuf.ByteString getOwner() {
      return owner_;
    }

    public static final int VALID_USERNAME_NAME_FIELD_NUMBER = 3;
    private volatile java.lang.Object validUsernameName_;
    /**
     * <pre>
     * Valid username name defines a regular expression that every valid username
     * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_name = 3;</code>
     */
    public java.lang.String getValidUsernameName() {
      java.lang.Object ref = validUsernameName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validUsernameName_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Valid username name defines a regular expression that every valid username
     * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_name = 3;</code>
     */
    public com.google.protobuf.ByteString
        getValidUsernameNameBytes() {
      java.lang.Object ref = validUsernameName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validUsernameName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALID_USERNAME_LABEL_FIELD_NUMBER = 4;
    private volatile java.lang.Object validUsernameLabel_;
    /**
     * <pre>
     * Valid username label defines a regular expression that every valid
     * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_label = 4;</code>
     */
    public java.lang.String getValidUsernameLabel() {
      java.lang.Object ref = validUsernameLabel_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        validUsernameLabel_ = s;
        return s;
      }
    }
    /**
     * <pre>
     * Valid username label defines a regular expression that every valid
     * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
     * </pre>
     *
     * <code>string valid_username_label = 4;</code>
     */
    public com.google.protobuf.ByteString
        getValidUsernameLabelBytes() {
      java.lang.Object ref = validUsernameLabel_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        validUsernameLabel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (!owner_.isEmpty()) {
        output.writeBytes(2, owner_);
      }
      if (!getValidUsernameNameBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 3, validUsernameName_);
      }
      if (!getValidUsernameLabelBytes().isEmpty()) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 4, validUsernameLabel_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (!owner_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, owner_);
      }
      if (!getValidUsernameNameBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, validUsernameName_);
      }
      if (!getValidUsernameLabelBytes().isEmpty()) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, validUsernameLabel_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.Configuration)) {
        return super.equals(obj);
      }
      username.Codec.Configuration other = (username.Codec.Configuration) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (!getOwner()
          .equals(other.getOwner())) return false;
      if (!getValidUsernameName()
          .equals(other.getValidUsernameName())) return false;
      if (!getValidUsernameLabel()
          .equals(other.getValidUsernameLabel())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      hash = (37 * hash) + OWNER_FIELD_NUMBER;
      hash = (53 * hash) + getOwner().hashCode();
      hash = (37 * hash) + VALID_USERNAME_NAME_FIELD_NUMBER;
      hash = (53 * hash) + getValidUsernameName().hashCode();
      hash = (37 * hash) + VALID_USERNAME_LABEL_FIELD_NUMBER;
      hash = (53 * hash) + getValidUsernameLabel().hashCode();
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.Configuration parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.Configuration parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.Configuration parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.Configuration parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.Configuration parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.Configuration parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.Configuration parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.Configuration parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.Configuration parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.Configuration parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.Configuration parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.Configuration parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.Configuration prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Configuration is a dynamic configuration used by this extension, managed by
     * the functionality provided by gconf package.
     * </pre>
     *
     * Protobuf type {@code username.Configuration}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.Configuration)
        username.Codec.ConfigurationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_Configuration_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_Configuration_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.Configuration.class, username.Codec.Configuration.Builder.class);
      }

      // Construct using username.Codec.Configuration.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        owner_ = com.google.protobuf.ByteString.EMPTY;

        validUsernameName_ = "";

        validUsernameLabel_ = "";

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_Configuration_descriptor;
      }

      @java.lang.Override
      public username.Codec.Configuration getDefaultInstanceForType() {
        return username.Codec.Configuration.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.Configuration build() {
        username.Codec.Configuration result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.Configuration buildPartial() {
        username.Codec.Configuration result = new username.Codec.Configuration(this);
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        result.owner_ = owner_;
        result.validUsernameName_ = validUsernameName_;
        result.validUsernameLabel_ = validUsernameLabel_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.Configuration) {
          return mergeFrom((username.Codec.Configuration)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.Configuration other) {
        if (other == username.Codec.Configuration.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.getOwner() != com.google.protobuf.ByteString.EMPTY) {
          setOwner(other.getOwner());
        }
        if (!other.getValidUsernameName().isEmpty()) {
          validUsernameName_ = other.validUsernameName_;
          onChanged();
        }
        if (!other.getValidUsernameLabel().isEmpty()) {
          validUsernameLabel_ = other.validUsernameLabel_;
          onChanged();
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.Configuration parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.Configuration) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private com.google.protobuf.ByteString owner_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Owner is present to implement gconf.OwnedConfig interface
       * This defines the Address that is allowed to update the Configuration object and is
       * needed to make use of gconf.NewUpdateConfigurationHandler
       * </pre>
       *
       * <code>bytes owner = 2;</code>
       */
      public com.google.protobuf.ByteString getOwner() {
        return owner_;
      }
      /**
       * <pre>
       * Owner is present to implement gconf.OwnedConfig interface
       * This defines the Address that is allowed to update the Configuration object and is
       * needed to make use of gconf.NewUpdateConfigurationHandler
       * </pre>
       *
       * <code>bytes owner = 2;</code>
       */
      public Builder setOwner(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        owner_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Owner is present to implement gconf.OwnedConfig interface
       * This defines the Address that is allowed to update the Configuration object and is
       * needed to make use of gconf.NewUpdateConfigurationHandler
       * </pre>
       *
       * <code>bytes owner = 2;</code>
       */
      public Builder clearOwner() {
        
        owner_ = getDefaultInstance().getOwner();
        onChanged();
        return this;
      }

      private java.lang.Object validUsernameName_ = "";
      /**
       * <pre>
       * Valid username name defines a regular expression that every valid username
       * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_name = 3;</code>
       */
      public java.lang.String getValidUsernameName() {
        java.lang.Object ref = validUsernameName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          validUsernameName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Valid username name defines a regular expression that every valid username
       * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_name = 3;</code>
       */
      public com.google.protobuf.ByteString
          getValidUsernameNameBytes() {
        java.lang.Object ref = validUsernameName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          validUsernameName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Valid username name defines a regular expression that every valid username
       * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_name = 3;</code>
       */
      public Builder setValidUsernameName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        validUsernameName_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Valid username name defines a regular expression that every valid username
       * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_name = 3;</code>
       */
      public Builder clearValidUsernameName() {
        
        validUsernameName_ = getDefaultInstance().getValidUsernameName();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Valid username name defines a regular expression that every valid username
       * part name must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_name = 3;</code>
       */
      public Builder setValidUsernameNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        validUsernameName_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object validUsernameLabel_ = "";
      /**
       * <pre>
       * Valid username label defines a regular expression that every valid
       * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_label = 4;</code>
       */
      public java.lang.String getValidUsernameLabel() {
        java.lang.Object ref = validUsernameLabel_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          validUsernameLabel_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <pre>
       * Valid username label defines a regular expression that every valid
       * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_label = 4;</code>
       */
      public com.google.protobuf.ByteString
          getValidUsernameLabelBytes() {
        java.lang.Object ref = validUsernameLabel_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          validUsernameLabel_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <pre>
       * Valid username label defines a regular expression that every valid
       * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_label = 4;</code>
       */
      public Builder setValidUsernameLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        validUsernameLabel_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Valid username label defines a regular expression that every valid
       * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_label = 4;</code>
       */
      public Builder clearValidUsernameLabel() {
        
        validUsernameLabel_ = getDefaultInstance().getValidUsernameLabel();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Valid username label defines a regular expression that every valid
       * namespace label must match (a username is &lt;name&gt;*&lt;label&gt;)
       * </pre>
       *
       * <code>string valid_username_label = 4;</code>
       */
      public Builder setValidUsernameLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
        
        validUsernameLabel_ = value;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.Configuration)
    }

    // @@protoc_insertion_point(class_scope:username.Configuration)
    private static final username.Codec.Configuration DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.Configuration();
    }

    public static username.Codec.Configuration getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Configuration>
        PARSER = new com.google.protobuf.AbstractParser<Configuration>() {
      @java.lang.Override
      public Configuration parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Configuration(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Configuration> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Configuration> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.Configuration getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface UpdateConfigurationMsgOrBuilder extends
      // @@protoc_insertion_point(interface_extends:username.UpdateConfigurationMsg)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    boolean hasMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.Metadata getMetadata();
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    weave.Codec.MetadataOrBuilder getMetadataOrBuilder();

    /**
     * <code>.username.Configuration patch = 2;</code>
     */
    boolean hasPatch();
    /**
     * <code>.username.Configuration patch = 2;</code>
     */
    username.Codec.Configuration getPatch();
    /**
     * <code>.username.Configuration patch = 2;</code>
     */
    username.Codec.ConfigurationOrBuilder getPatchOrBuilder();
  }
  /**
   * <pre>
   * UpdateConfigurationMsg is used by the gconf extension to update the
   * configuration.
   * </pre>
   *
   * Protobuf type {@code username.UpdateConfigurationMsg}
   */
  public  static final class UpdateConfigurationMsg extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:username.UpdateConfigurationMsg)
      UpdateConfigurationMsgOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use UpdateConfigurationMsg.newBuilder() to construct.
    private UpdateConfigurationMsg(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private UpdateConfigurationMsg() {
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private UpdateConfigurationMsg(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              weave.Codec.Metadata.Builder subBuilder = null;
              if (metadata_ != null) {
                subBuilder = metadata_.toBuilder();
              }
              metadata_ = input.readMessage(weave.Codec.Metadata.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(metadata_);
                metadata_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              username.Codec.Configuration.Builder subBuilder = null;
              if (patch_ != null) {
                subBuilder = patch_.toBuilder();
              }
              patch_ = input.readMessage(username.Codec.Configuration.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(patch_);
                patch_ = subBuilder.buildPartial();
              }

              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return username.Codec.internal_static_username_UpdateConfigurationMsg_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return username.Codec.internal_static_username_UpdateConfigurationMsg_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              username.Codec.UpdateConfigurationMsg.class, username.Codec.UpdateConfigurationMsg.Builder.class);
    }

    public static final int METADATA_FIELD_NUMBER = 1;
    private weave.Codec.Metadata metadata_;
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public boolean hasMetadata() {
      return metadata_ != null;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.Metadata getMetadata() {
      return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
    }
    /**
     * <code>.weave.Metadata metadata = 1;</code>
     */
    public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
      return getMetadata();
    }

    public static final int PATCH_FIELD_NUMBER = 2;
    private username.Codec.Configuration patch_;
    /**
     * <code>.username.Configuration patch = 2;</code>
     */
    public boolean hasPatch() {
      return patch_ != null;
    }
    /**
     * <code>.username.Configuration patch = 2;</code>
     */
    public username.Codec.Configuration getPatch() {
      return patch_ == null ? username.Codec.Configuration.getDefaultInstance() : patch_;
    }
    /**
     * <code>.username.Configuration patch = 2;</code>
     */
    public username.Codec.ConfigurationOrBuilder getPatchOrBuilder() {
      return getPatch();
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (metadata_ != null) {
        output.writeMessage(1, getMetadata());
      }
      if (patch_ != null) {
        output.writeMessage(2, getPatch());
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (metadata_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getMetadata());
      }
      if (patch_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getPatch());
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof username.Codec.UpdateConfigurationMsg)) {
        return super.equals(obj);
      }
      username.Codec.UpdateConfigurationMsg other = (username.Codec.UpdateConfigurationMsg) obj;

      if (hasMetadata() != other.hasMetadata()) return false;
      if (hasMetadata()) {
        if (!getMetadata()
            .equals(other.getMetadata())) return false;
      }
      if (hasPatch() != other.hasPatch()) return false;
      if (hasPatch()) {
        if (!getPatch()
            .equals(other.getPatch())) return false;
      }
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasMetadata()) {
        hash = (37 * hash) + METADATA_FIELD_NUMBER;
        hash = (53 * hash) + getMetadata().hashCode();
      }
      if (hasPatch()) {
        hash = (37 * hash) + PATCH_FIELD_NUMBER;
        hash = (53 * hash) + getPatch().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static username.Codec.UpdateConfigurationMsg parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.UpdateConfigurationMsg parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static username.Codec.UpdateConfigurationMsg parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static username.Codec.UpdateConfigurationMsg parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(username.Codec.UpdateConfigurationMsg prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * UpdateConfigurationMsg is used by the gconf extension to update the
     * configuration.
     * </pre>
     *
     * Protobuf type {@code username.UpdateConfigurationMsg}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:username.UpdateConfigurationMsg)
        username.Codec.UpdateConfigurationMsgOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return username.Codec.internal_static_username_UpdateConfigurationMsg_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return username.Codec.internal_static_username_UpdateConfigurationMsg_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                username.Codec.UpdateConfigurationMsg.class, username.Codec.UpdateConfigurationMsg.Builder.class);
      }

      // Construct using username.Codec.UpdateConfigurationMsg.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (metadataBuilder_ == null) {
          metadata_ = null;
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }
        if (patchBuilder_ == null) {
          patch_ = null;
        } else {
          patch_ = null;
          patchBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return username.Codec.internal_static_username_UpdateConfigurationMsg_descriptor;
      }

      @java.lang.Override
      public username.Codec.UpdateConfigurationMsg getDefaultInstanceForType() {
        return username.Codec.UpdateConfigurationMsg.getDefaultInstance();
      }

      @java.lang.Override
      public username.Codec.UpdateConfigurationMsg build() {
        username.Codec.UpdateConfigurationMsg result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public username.Codec.UpdateConfigurationMsg buildPartial() {
        username.Codec.UpdateConfigurationMsg result = new username.Codec.UpdateConfigurationMsg(this);
        if (metadataBuilder_ == null) {
          result.metadata_ = metadata_;
        } else {
          result.metadata_ = metadataBuilder_.build();
        }
        if (patchBuilder_ == null) {
          result.patch_ = patch_;
        } else {
          result.patch_ = patchBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof username.Codec.UpdateConfigurationMsg) {
          return mergeFrom((username.Codec.UpdateConfigurationMsg)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(username.Codec.UpdateConfigurationMsg other) {
        if (other == username.Codec.UpdateConfigurationMsg.getDefaultInstance()) return this;
        if (other.hasMetadata()) {
          mergeMetadata(other.getMetadata());
        }
        if (other.hasPatch()) {
          mergePatch(other.getPatch());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        username.Codec.UpdateConfigurationMsg parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (username.Codec.UpdateConfigurationMsg) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private weave.Codec.Metadata metadata_;
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> metadataBuilder_;
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public boolean hasMetadata() {
        return metadataBuilder_ != null || metadata_ != null;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata getMetadata() {
        if (metadataBuilder_ == null) {
          return metadata_ == null ? weave.Codec.Metadata.getDefaultInstance() : metadata_;
        } else {
          return metadataBuilder_.getMessage();
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          metadata_ = value;
          onChanged();
        } else {
          metadataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder setMetadata(
          weave.Codec.Metadata.Builder builderForValue) {
        if (metadataBuilder_ == null) {
          metadata_ = builderForValue.build();
          onChanged();
        } else {
          metadataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder mergeMetadata(weave.Codec.Metadata value) {
        if (metadataBuilder_ == null) {
          if (metadata_ != null) {
            metadata_ =
              weave.Codec.Metadata.newBuilder(metadata_).mergeFrom(value).buildPartial();
          } else {
            metadata_ = value;
          }
          onChanged();
        } else {
          metadataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public Builder clearMetadata() {
        if (metadataBuilder_ == null) {
          metadata_ = null;
          onChanged();
        } else {
          metadata_ = null;
          metadataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.Metadata.Builder getMetadataBuilder() {
        
        onChanged();
        return getMetadataFieldBuilder().getBuilder();
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      public weave.Codec.MetadataOrBuilder getMetadataOrBuilder() {
        if (metadataBuilder_ != null) {
          return metadataBuilder_.getMessageOrBuilder();
        } else {
          return metadata_ == null ?
              weave.Codec.Metadata.getDefaultInstance() : metadata_;
        }
      }
      /**
       * <code>.weave.Metadata metadata = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder> 
          getMetadataFieldBuilder() {
        if (metadataBuilder_ == null) {
          metadataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              weave.Codec.Metadata, weave.Codec.Metadata.Builder, weave.Codec.MetadataOrBuilder>(
                  getMetadata(),
                  getParentForChildren(),
                  isClean());
          metadata_ = null;
        }
        return metadataBuilder_;
      }

      private username.Codec.Configuration patch_;
      private com.google.protobuf.SingleFieldBuilderV3<
          username.Codec.Configuration, username.Codec.Configuration.Builder, username.Codec.ConfigurationOrBuilder> patchBuilder_;
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public boolean hasPatch() {
        return patchBuilder_ != null || patch_ != null;
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public username.Codec.Configuration getPatch() {
        if (patchBuilder_ == null) {
          return patch_ == null ? username.Codec.Configuration.getDefaultInstance() : patch_;
        } else {
          return patchBuilder_.getMessage();
        }
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public Builder setPatch(username.Codec.Configuration value) {
        if (patchBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          patch_ = value;
          onChanged();
        } else {
          patchBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public Builder setPatch(
          username.Codec.Configuration.Builder builderForValue) {
        if (patchBuilder_ == null) {
          patch_ = builderForValue.build();
          onChanged();
        } else {
          patchBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public Builder mergePatch(username.Codec.Configuration value) {
        if (patchBuilder_ == null) {
          if (patch_ != null) {
            patch_ =
              username.Codec.Configuration.newBuilder(patch_).mergeFrom(value).buildPartial();
          } else {
            patch_ = value;
          }
          onChanged();
        } else {
          patchBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public Builder clearPatch() {
        if (patchBuilder_ == null) {
          patch_ = null;
          onChanged();
        } else {
          patch_ = null;
          patchBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public username.Codec.Configuration.Builder getPatchBuilder() {
        
        onChanged();
        return getPatchFieldBuilder().getBuilder();
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      public username.Codec.ConfigurationOrBuilder getPatchOrBuilder() {
        if (patchBuilder_ != null) {
          return patchBuilder_.getMessageOrBuilder();
        } else {
          return patch_ == null ?
              username.Codec.Configuration.getDefaultInstance() : patch_;
        }
      }
      /**
       * <code>.username.Configuration patch = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          username.Codec.Configuration, username.Codec.Configuration.Builder, username.Codec.ConfigurationOrBuilder> 
          getPatchFieldBuilder() {
        if (patchBuilder_ == null) {
          patchBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              username.Codec.Configuration, username.Codec.Configuration.Builder, username.Codec.ConfigurationOrBuilder>(
                  getPatch(),
                  getParentForChildren(),
                  isClean());
          patch_ = null;
        }
        return patchBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:username.UpdateConfigurationMsg)
    }

    // @@protoc_insertion_point(class_scope:username.UpdateConfigurationMsg)
    private static final username.Codec.UpdateConfigurationMsg DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new username.Codec.UpdateConfigurationMsg();
    }

    public static username.Codec.UpdateConfigurationMsg getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<UpdateConfigurationMsg>
        PARSER = new com.google.protobuf.AbstractParser<UpdateConfigurationMsg>() {
      @java.lang.Override
      public UpdateConfigurationMsg parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new UpdateConfigurationMsg(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<UpdateConfigurationMsg> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<UpdateConfigurationMsg> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public username.Codec.UpdateConfigurationMsg getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_Token_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_Token_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_BlockchainAddress_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_BlockchainAddress_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_RegisterTokenMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_RegisterTokenMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_TransferTokenMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_TransferTokenMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_ChangeTokenTargetsMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_ChangeTokenTargetsMsg_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_Configuration_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_Configuration_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_username_UpdateConfigurationMsg_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_username_UpdateConfigurationMsg_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037cmd/bnsd/x/username/codec.proto\022\010usern" +
      "ame\032\013codec.proto\"g\n\005Token\022!\n\010metadata\030\001 " +
      "\001(\0132\017.weave.Metadata\022,\n\007targets\030\002 \003(\0132\033." +
      "username.BlockchainAddress\022\r\n\005owner\030\003 \001(" +
      "\014\";\n\021BlockchainAddress\022\025\n\rblockchain_id\030" +
      "\001 \001(\t\022\017\n\007address\030\002 \001(\t\"u\n\020RegisterTokenM" +
      "sg\022!\n\010metadata\030\001 \001(\0132\017.weave.Metadata\022\020\n" +
      "\010username\030\002 \001(\t\022,\n\007targets\030\003 \003(\0132\033.usern" +
      "ame.BlockchainAddress\"Z\n\020TransferTokenMs" +
      "g\022!\n\010metadata\030\001 \001(\0132\017.weave.Metadata\022\020\n\010" +
      "username\030\002 \001(\t\022\021\n\tnew_owner\030\003 \001(\014\"~\n\025Cha" +
      "ngeTokenTargetsMsg\022!\n\010metadata\030\001 \001(\0132\017.w" +
      "eave.Metadata\022\020\n\010username\030\002 \001(\t\0220\n\013new_t" +
      "argets\030\003 \003(\0132\033.username.BlockchainAddres" +
      "s\"|\n\rConfiguration\022!\n\010metadata\030\001 \001(\0132\017.w" +
      "eave.Metadata\022\r\n\005owner\030\002 \001(\014\022\033\n\023valid_us" +
      "ername_name\030\003 \001(\t\022\034\n\024valid_username_labe" +
      "l\030\004 \001(\t\"c\n\026UpdateConfigurationMsg\022!\n\010met" +
      "adata\030\001 \001(\0132\017.weave.Metadata\022&\n\005patch\030\002 " +
      "\001(\0132\027.username.Configurationb\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          weave.Codec.getDescriptor(),
        }, assigner);
    internal_static_username_Token_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_username_Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_Token_descriptor,
        new java.lang.String[] { "Metadata", "Targets", "Owner", });
    internal_static_username_BlockchainAddress_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_username_BlockchainAddress_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_BlockchainAddress_descriptor,
        new java.lang.String[] { "BlockchainId", "Address", });
    internal_static_username_RegisterTokenMsg_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_username_RegisterTokenMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_RegisterTokenMsg_descriptor,
        new java.lang.String[] { "Metadata", "Username", "Targets", });
    internal_static_username_TransferTokenMsg_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_username_TransferTokenMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_TransferTokenMsg_descriptor,
        new java.lang.String[] { "Metadata", "Username", "NewOwner", });
    internal_static_username_ChangeTokenTargetsMsg_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_username_ChangeTokenTargetsMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_ChangeTokenTargetsMsg_descriptor,
        new java.lang.String[] { "Metadata", "Username", "NewTargets", });
    internal_static_username_Configuration_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_username_Configuration_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_Configuration_descriptor,
        new java.lang.String[] { "Metadata", "Owner", "ValidUsernameName", "ValidUsernameLabel", });
    internal_static_username_UpdateConfigurationMsg_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_username_UpdateConfigurationMsg_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_username_UpdateConfigurationMsg_descriptor,
        new java.lang.String[] { "Metadata", "Patch", });
    weave.Codec.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
