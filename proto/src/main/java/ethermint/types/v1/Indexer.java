// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ethermint/types/v1/indexer.proto

package ethermint.types.v1;

public final class Indexer {
  private Indexer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface TxResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:ethermint.types.v1.TxResult)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * the block height
     * </pre>
     *
     * <code>int64 height = 1;</code>
     * @return The height.
     */
    long getHeight();

    /**
     * <pre>
     * cosmos tx index
     * </pre>
     *
     * <code>uint32 tx_index = 2;</code>
     * @return The txIndex.
     */
    int getTxIndex();

    /**
     * <pre>
     * the msg index in a batch tx
     * </pre>
     *
     * <code>uint32 msg_index = 3;</code>
     * @return The msgIndex.
     */
    int getMsgIndex();

    /**
     * <pre>
     * eth tx index, the index in the list of valid eth tx in the block,
     * aka. the transaction list returned by eth_getBlock api.
     * </pre>
     *
     * <code>int32 eth_tx_index = 4;</code>
     * @return The ethTxIndex.
     */
    int getEthTxIndex();

    /**
     * <pre>
     * if the eth tx is failed
     * </pre>
     *
     * <code>bool failed = 5;</code>
     * @return The failed.
     */
    boolean getFailed();

    /**
     * <pre>
     * gas used by tx, if exceeds block gas limit,
     * it's set to gas limit which is what's actually deducted by ante handler.
     * </pre>
     *
     * <code>uint64 gas_used = 6;</code>
     * @return The gasUsed.
     */
    long getGasUsed();

    /**
     * <pre>
     * the cumulative gas used within current batch tx
     * </pre>
     *
     * <code>uint64 cumulative_gas_used = 7;</code>
     * @return The cumulativeGasUsed.
     */
    long getCumulativeGasUsed();
  }
  /**
   * <pre>
   * TxResult is the value stored in eth tx indexer
   * </pre>
   *
   * Protobuf type {@code ethermint.types.v1.TxResult}
   */
  public static final class TxResult extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:ethermint.types.v1.TxResult)
      TxResultOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use TxResult.newBuilder() to construct.
    private TxResult(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private TxResult() {
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new TxResult();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private TxResult(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {

              height_ = input.readInt64();
              break;
            }
            case 16: {

              txIndex_ = input.readUInt32();
              break;
            }
            case 24: {

              msgIndex_ = input.readUInt32();
              break;
            }
            case 32: {

              ethTxIndex_ = input.readInt32();
              break;
            }
            case 40: {

              failed_ = input.readBool();
              break;
            }
            case 48: {

              gasUsed_ = input.readUInt64();
              break;
            }
            case 56: {

              cumulativeGasUsed_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return ethermint.types.v1.Indexer.internal_static_ethermint_types_v1_TxResult_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return ethermint.types.v1.Indexer.internal_static_ethermint_types_v1_TxResult_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              ethermint.types.v1.Indexer.TxResult.class, ethermint.types.v1.Indexer.TxResult.Builder.class);
    }

    public static final int HEIGHT_FIELD_NUMBER = 1;
    private long height_;
    /**
     * <pre>
     * the block height
     * </pre>
     *
     * <code>int64 height = 1;</code>
     * @return The height.
     */
    @java.lang.Override
    public long getHeight() {
      return height_;
    }

    public static final int TX_INDEX_FIELD_NUMBER = 2;
    private int txIndex_;
    /**
     * <pre>
     * cosmos tx index
     * </pre>
     *
     * <code>uint32 tx_index = 2;</code>
     * @return The txIndex.
     */
    @java.lang.Override
    public int getTxIndex() {
      return txIndex_;
    }

    public static final int MSG_INDEX_FIELD_NUMBER = 3;
    private int msgIndex_;
    /**
     * <pre>
     * the msg index in a batch tx
     * </pre>
     *
     * <code>uint32 msg_index = 3;</code>
     * @return The msgIndex.
     */
    @java.lang.Override
    public int getMsgIndex() {
      return msgIndex_;
    }

    public static final int ETH_TX_INDEX_FIELD_NUMBER = 4;
    private int ethTxIndex_;
    /**
     * <pre>
     * eth tx index, the index in the list of valid eth tx in the block,
     * aka. the transaction list returned by eth_getBlock api.
     * </pre>
     *
     * <code>int32 eth_tx_index = 4;</code>
     * @return The ethTxIndex.
     */
    @java.lang.Override
    public int getEthTxIndex() {
      return ethTxIndex_;
    }

    public static final int FAILED_FIELD_NUMBER = 5;
    private boolean failed_;
    /**
     * <pre>
     * if the eth tx is failed
     * </pre>
     *
     * <code>bool failed = 5;</code>
     * @return The failed.
     */
    @java.lang.Override
    public boolean getFailed() {
      return failed_;
    }

    public static final int GAS_USED_FIELD_NUMBER = 6;
    private long gasUsed_;
    /**
     * <pre>
     * gas used by tx, if exceeds block gas limit,
     * it's set to gas limit which is what's actually deducted by ante handler.
     * </pre>
     *
     * <code>uint64 gas_used = 6;</code>
     * @return The gasUsed.
     */
    @java.lang.Override
    public long getGasUsed() {
      return gasUsed_;
    }

    public static final int CUMULATIVE_GAS_USED_FIELD_NUMBER = 7;
    private long cumulativeGasUsed_;
    /**
     * <pre>
     * the cumulative gas used within current batch tx
     * </pre>
     *
     * <code>uint64 cumulative_gas_used = 7;</code>
     * @return The cumulativeGasUsed.
     */
    @java.lang.Override
    public long getCumulativeGasUsed() {
      return cumulativeGasUsed_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (height_ != 0L) {
        output.writeInt64(1, height_);
      }
      if (txIndex_ != 0) {
        output.writeUInt32(2, txIndex_);
      }
      if (msgIndex_ != 0) {
        output.writeUInt32(3, msgIndex_);
      }
      if (ethTxIndex_ != 0) {
        output.writeInt32(4, ethTxIndex_);
      }
      if (failed_ != false) {
        output.writeBool(5, failed_);
      }
      if (gasUsed_ != 0L) {
        output.writeUInt64(6, gasUsed_);
      }
      if (cumulativeGasUsed_ != 0L) {
        output.writeUInt64(7, cumulativeGasUsed_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (height_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, height_);
      }
      if (txIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, txIndex_);
      }
      if (msgIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, msgIndex_);
      }
      if (ethTxIndex_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, ethTxIndex_);
      }
      if (failed_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(5, failed_);
      }
      if (gasUsed_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(6, gasUsed_);
      }
      if (cumulativeGasUsed_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(7, cumulativeGasUsed_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof ethermint.types.v1.Indexer.TxResult)) {
        return super.equals(obj);
      }
      ethermint.types.v1.Indexer.TxResult other = (ethermint.types.v1.Indexer.TxResult) obj;

      if (getHeight()
          != other.getHeight()) return false;
      if (getTxIndex()
          != other.getTxIndex()) return false;
      if (getMsgIndex()
          != other.getMsgIndex()) return false;
      if (getEthTxIndex()
          != other.getEthTxIndex()) return false;
      if (getFailed()
          != other.getFailed()) return false;
      if (getGasUsed()
          != other.getGasUsed()) return false;
      if (getCumulativeGasUsed()
          != other.getCumulativeGasUsed()) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getHeight());
      hash = (37 * hash) + TX_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getTxIndex();
      hash = (37 * hash) + MSG_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getMsgIndex();
      hash = (37 * hash) + ETH_TX_INDEX_FIELD_NUMBER;
      hash = (53 * hash) + getEthTxIndex();
      hash = (37 * hash) + FAILED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getFailed());
      hash = (37 * hash) + GAS_USED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getGasUsed());
      hash = (37 * hash) + CUMULATIVE_GAS_USED_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getCumulativeGasUsed());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static ethermint.types.v1.Indexer.TxResult parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static ethermint.types.v1.Indexer.TxResult parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static ethermint.types.v1.Indexer.TxResult parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(ethermint.types.v1.Indexer.TxResult prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * TxResult is the value stored in eth tx indexer
     * </pre>
     *
     * Protobuf type {@code ethermint.types.v1.TxResult}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:ethermint.types.v1.TxResult)
        ethermint.types.v1.Indexer.TxResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return ethermint.types.v1.Indexer.internal_static_ethermint_types_v1_TxResult_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return ethermint.types.v1.Indexer.internal_static_ethermint_types_v1_TxResult_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                ethermint.types.v1.Indexer.TxResult.class, ethermint.types.v1.Indexer.TxResult.Builder.class);
      }

      // Construct using ethermint.types.v1.Indexer.TxResult.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        height_ = 0L;

        txIndex_ = 0;

        msgIndex_ = 0;

        ethTxIndex_ = 0;

        failed_ = false;

        gasUsed_ = 0L;

        cumulativeGasUsed_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return ethermint.types.v1.Indexer.internal_static_ethermint_types_v1_TxResult_descriptor;
      }

      @java.lang.Override
      public ethermint.types.v1.Indexer.TxResult getDefaultInstanceForType() {
        return ethermint.types.v1.Indexer.TxResult.getDefaultInstance();
      }

      @java.lang.Override
      public ethermint.types.v1.Indexer.TxResult build() {
        ethermint.types.v1.Indexer.TxResult result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public ethermint.types.v1.Indexer.TxResult buildPartial() {
        ethermint.types.v1.Indexer.TxResult result = new ethermint.types.v1.Indexer.TxResult(this);
        result.height_ = height_;
        result.txIndex_ = txIndex_;
        result.msgIndex_ = msgIndex_;
        result.ethTxIndex_ = ethTxIndex_;
        result.failed_ = failed_;
        result.gasUsed_ = gasUsed_;
        result.cumulativeGasUsed_ = cumulativeGasUsed_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof ethermint.types.v1.Indexer.TxResult) {
          return mergeFrom((ethermint.types.v1.Indexer.TxResult)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(ethermint.types.v1.Indexer.TxResult other) {
        if (other == ethermint.types.v1.Indexer.TxResult.getDefaultInstance()) return this;
        if (other.getHeight() != 0L) {
          setHeight(other.getHeight());
        }
        if (other.getTxIndex() != 0) {
          setTxIndex(other.getTxIndex());
        }
        if (other.getMsgIndex() != 0) {
          setMsgIndex(other.getMsgIndex());
        }
        if (other.getEthTxIndex() != 0) {
          setEthTxIndex(other.getEthTxIndex());
        }
        if (other.getFailed() != false) {
          setFailed(other.getFailed());
        }
        if (other.getGasUsed() != 0L) {
          setGasUsed(other.getGasUsed());
        }
        if (other.getCumulativeGasUsed() != 0L) {
          setCumulativeGasUsed(other.getCumulativeGasUsed());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        ethermint.types.v1.Indexer.TxResult parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (ethermint.types.v1.Indexer.TxResult) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private long height_ ;
      /**
       * <pre>
       * the block height
       * </pre>
       *
       * <code>int64 height = 1;</code>
       * @return The height.
       */
      @java.lang.Override
      public long getHeight() {
        return height_;
      }
      /**
       * <pre>
       * the block height
       * </pre>
       *
       * <code>int64 height = 1;</code>
       * @param value The height to set.
       * @return This builder for chaining.
       */
      public Builder setHeight(long value) {
        
        height_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the block height
       * </pre>
       *
       * <code>int64 height = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearHeight() {
        
        height_ = 0L;
        onChanged();
        return this;
      }

      private int txIndex_ ;
      /**
       * <pre>
       * cosmos tx index
       * </pre>
       *
       * <code>uint32 tx_index = 2;</code>
       * @return The txIndex.
       */
      @java.lang.Override
      public int getTxIndex() {
        return txIndex_;
      }
      /**
       * <pre>
       * cosmos tx index
       * </pre>
       *
       * <code>uint32 tx_index = 2;</code>
       * @param value The txIndex to set.
       * @return This builder for chaining.
       */
      public Builder setTxIndex(int value) {
        
        txIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * cosmos tx index
       * </pre>
       *
       * <code>uint32 tx_index = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearTxIndex() {
        
        txIndex_ = 0;
        onChanged();
        return this;
      }

      private int msgIndex_ ;
      /**
       * <pre>
       * the msg index in a batch tx
       * </pre>
       *
       * <code>uint32 msg_index = 3;</code>
       * @return The msgIndex.
       */
      @java.lang.Override
      public int getMsgIndex() {
        return msgIndex_;
      }
      /**
       * <pre>
       * the msg index in a batch tx
       * </pre>
       *
       * <code>uint32 msg_index = 3;</code>
       * @param value The msgIndex to set.
       * @return This builder for chaining.
       */
      public Builder setMsgIndex(int value) {
        
        msgIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the msg index in a batch tx
       * </pre>
       *
       * <code>uint32 msg_index = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMsgIndex() {
        
        msgIndex_ = 0;
        onChanged();
        return this;
      }

      private int ethTxIndex_ ;
      /**
       * <pre>
       * eth tx index, the index in the list of valid eth tx in the block,
       * aka. the transaction list returned by eth_getBlock api.
       * </pre>
       *
       * <code>int32 eth_tx_index = 4;</code>
       * @return The ethTxIndex.
       */
      @java.lang.Override
      public int getEthTxIndex() {
        return ethTxIndex_;
      }
      /**
       * <pre>
       * eth tx index, the index in the list of valid eth tx in the block,
       * aka. the transaction list returned by eth_getBlock api.
       * </pre>
       *
       * <code>int32 eth_tx_index = 4;</code>
       * @param value The ethTxIndex to set.
       * @return This builder for chaining.
       */
      public Builder setEthTxIndex(int value) {
        
        ethTxIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * eth tx index, the index in the list of valid eth tx in the block,
       * aka. the transaction list returned by eth_getBlock api.
       * </pre>
       *
       * <code>int32 eth_tx_index = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearEthTxIndex() {
        
        ethTxIndex_ = 0;
        onChanged();
        return this;
      }

      private boolean failed_ ;
      /**
       * <pre>
       * if the eth tx is failed
       * </pre>
       *
       * <code>bool failed = 5;</code>
       * @return The failed.
       */
      @java.lang.Override
      public boolean getFailed() {
        return failed_;
      }
      /**
       * <pre>
       * if the eth tx is failed
       * </pre>
       *
       * <code>bool failed = 5;</code>
       * @param value The failed to set.
       * @return This builder for chaining.
       */
      public Builder setFailed(boolean value) {
        
        failed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * if the eth tx is failed
       * </pre>
       *
       * <code>bool failed = 5;</code>
       * @return This builder for chaining.
       */
      public Builder clearFailed() {
        
        failed_ = false;
        onChanged();
        return this;
      }

      private long gasUsed_ ;
      /**
       * <pre>
       * gas used by tx, if exceeds block gas limit,
       * it's set to gas limit which is what's actually deducted by ante handler.
       * </pre>
       *
       * <code>uint64 gas_used = 6;</code>
       * @return The gasUsed.
       */
      @java.lang.Override
      public long getGasUsed() {
        return gasUsed_;
      }
      /**
       * <pre>
       * gas used by tx, if exceeds block gas limit,
       * it's set to gas limit which is what's actually deducted by ante handler.
       * </pre>
       *
       * <code>uint64 gas_used = 6;</code>
       * @param value The gasUsed to set.
       * @return This builder for chaining.
       */
      public Builder setGasUsed(long value) {
        
        gasUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * gas used by tx, if exceeds block gas limit,
       * it's set to gas limit which is what's actually deducted by ante handler.
       * </pre>
       *
       * <code>uint64 gas_used = 6;</code>
       * @return This builder for chaining.
       */
      public Builder clearGasUsed() {
        
        gasUsed_ = 0L;
        onChanged();
        return this;
      }

      private long cumulativeGasUsed_ ;
      /**
       * <pre>
       * the cumulative gas used within current batch tx
       * </pre>
       *
       * <code>uint64 cumulative_gas_used = 7;</code>
       * @return The cumulativeGasUsed.
       */
      @java.lang.Override
      public long getCumulativeGasUsed() {
        return cumulativeGasUsed_;
      }
      /**
       * <pre>
       * the cumulative gas used within current batch tx
       * </pre>
       *
       * <code>uint64 cumulative_gas_used = 7;</code>
       * @param value The cumulativeGasUsed to set.
       * @return This builder for chaining.
       */
      public Builder setCumulativeGasUsed(long value) {
        
        cumulativeGasUsed_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * the cumulative gas used within current batch tx
       * </pre>
       *
       * <code>uint64 cumulative_gas_used = 7;</code>
       * @return This builder for chaining.
       */
      public Builder clearCumulativeGasUsed() {
        
        cumulativeGasUsed_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:ethermint.types.v1.TxResult)
    }

    // @@protoc_insertion_point(class_scope:ethermint.types.v1.TxResult)
    private static final ethermint.types.v1.Indexer.TxResult DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new ethermint.types.v1.Indexer.TxResult();
    }

    public static ethermint.types.v1.Indexer.TxResult getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<TxResult>
        PARSER = new com.google.protobuf.AbstractParser<TxResult>() {
      @java.lang.Override
      public TxResult parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TxResult(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<TxResult> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<TxResult> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public ethermint.types.v1.Indexer.TxResult getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_ethermint_types_v1_TxResult_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_ethermint_types_v1_TxResult_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n ethermint/types/v1/indexer.proto\022\022ethe" +
      "rmint.types.v1\032\024gogoproto/gogo.proto\"\232\001\n" +
      "\010TxResult\022\016\n\006height\030\001 \001(\003\022\020\n\010tx_index\030\002 " +
      "\001(\r\022\021\n\tmsg_index\030\003 \001(\r\022\024\n\014eth_tx_index\030\004" +
      " \001(\005\022\016\n\006failed\030\005 \001(\010\022\020\n\010gas_used\030\006 \001(\004\022\033" +
      "\n\023cumulative_gas_used\030\007 \001(\004:\004\210\240\037\000B\"Z git" +
      "hub.com/evmos/ethermint/typesb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.protobuf2.GoGoProtos.getDescriptor(),
        });
    internal_static_ethermint_types_v1_TxResult_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_ethermint_types_v1_TxResult_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_ethermint_types_v1_TxResult_descriptor,
        new java.lang.String[] { "Height", "TxIndex", "MsgIndex", "EthTxIndex", "Failed", "GasUsed", "CumulativeGasUsed", });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.protobuf2.GoGoProtos.goprotoGetters);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    com.google.protobuf2.GoGoProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
